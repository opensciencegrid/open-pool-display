[probe]
# how often to send data in seconds
interval = 240
# how many times to retry condor queries
retries = 1
# seconds to wait beteeen retries
delay = 5
# if true, data is output to stdout and not sent downstream
test = false
# run one time and exit, i.e. for running wtih cron
once = false
# enable promethus metrics server for monitoring the probe
publish_metrics = true

[graphite]
# enable output to graphite
enable = true
# graphite host
host = graphite.mwt2.org
# graphite pickle port
port = 2004
# base namespace for metrics
namespace = test.osg-open-pool
# namespace for probe monitoring metrics
meta_namespace = test.osg-open-pool.probes

[influxdb]
# enable output to influxdb (not fully supported)
enable = false
# influxdb host
host = localhost
# influxdb api port
port = 8086
# influxdb database
db = test
# extra tags to include with all metrics (comma-separated key:value)
tags = cluster:test

[condor]
# central manager/collector host
pool = flock.opensciencegrid.org
# collect basic daemon (collector, negotiator, schedd) metrics?
post_pool_status = true
# collect machine/startd metrics?
post_pool_slots = true
# constraint to limit which startds metrics are collected for
slot_constraint = true
# collect glidein-specific startd metrics?
post_pool_glideins = true
# collect priorities and quotas?
post_pool_prio = true
# constraint to limit which negotiators are queried
negotiator_constraint = true
# If true, first try to get priorities and quotas from Accounting classads in collector,
# then fallback to negotiator. Opposite order if false.
prefer_accounting = false
# collect job metrics?
post_pool_jobs = true
# constraint to limit which schedds are queried
schedd_constraint = regexp("jupyter-notebook", Name) != True && regexp("cyverse", Name) != True
# Enable GSI (x509 certificate) authorization
use_gsi_auth = true
X509_USER_KEY = "/etc/condor/flock-key.pem"
X509_USER_CERT = "/etc/condor/flock-cert.pem"

